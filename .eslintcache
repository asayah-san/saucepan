[{"/home/isaiahcollins/Projects/saucepan/src/i18n.js":"1","/home/isaiahcollins/Projects/saucepan/src/index.tsx":"2","/home/isaiahcollins/Projects/saucepan/src/form/form.tsx":"3","/home/isaiahcollins/Projects/saucepan/src/core/core.tsx":"4","/home/isaiahcollins/Projects/saucepan/src/sauces/sauces.tsx":"5","/home/isaiahcollins/Projects/saucepan/src/saucepan/saucepan.tsx":"6","/home/isaiahcollins/Projects/saucepan/src/components/components.js":"7","/home/isaiahcollins/Projects/saucepan/src/storage/storage.ts":"8"},{"size":544,"mtime":1609081076801,"results":"9","hashOfConfig":"10"},{"size":387,"mtime":1609334694152,"results":"11","hashOfConfig":"10"},{"size":4927,"mtime":1609378748967,"results":"12","hashOfConfig":"10"},{"size":9847,"mtime":1609414956624,"results":"13","hashOfConfig":"10"},{"size":2893,"mtime":1609379097538,"results":"14","hashOfConfig":"10"},{"size":3872,"mtime":1609414181104,"results":"15","hashOfConfig":"10"},{"size":3154,"mtime":1609376235300,"results":"16","hashOfConfig":"10"},{"size":193,"mtime":1609414108623,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1b5mufr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},"/home/isaiahcollins/Projects/saucepan/src/i18n.js",[],["38","39"],"/home/isaiahcollins/Projects/saucepan/src/index.tsx",[],["40","41"],"/home/isaiahcollins/Projects/saucepan/src/form/form.tsx",[],"/home/isaiahcollins/Projects/saucepan/src/core/core.tsx",[],"/home/isaiahcollins/Projects/saucepan/src/sauces/sauces.tsx",[],"/home/isaiahcollins/Projects/saucepan/src/saucepan/saucepan.tsx",["42"],"import i18n from '../i18n';\nimport React, { Component, FormEvent, Fragment } from 'react';\nimport { IconPencil, IconMenu2 } from \"@tabler/icons\";\nimport { Input } from '../components/components';\nimport { List } from '../sauces/sauces';\nimport { Pan } from \"../core/types\";\n\nconst input_header_id = \"input_id\";\nconst input_header_name = \"input_name\";\n\ntype SaucepanProps = {\n    data: Pan,\n    autoRenderToMarkdown: boolean,\n    isInHeaderEditMode: boolean,\n    onHeaderEdit: Function,\n    onHeaderChanged: Function,\n    onCreate: Function,\n    onEdit: Function,\n    onRemove: Function,\n    onCopy: Function\n}\n\nconst Saucepan = (props: SaucepanProps) => {\n    return (\n        <Fragment>\n            <SaucepanHeader\n                id={props.data._id}\n                header={props.data.name}\n                isInHeaderEditMode={props.isInHeaderEditMode}\n                onHeaderEdit={props.onHeaderEdit}\n                onHeaderChanged={props.onHeaderChanged}/>\n            <Fragment>\n                <List\n                    saucepanId={props.data._id}\n                    sauces={props.data.sauces}\n                    autoRenderToMarkdown={props.autoRenderToMarkdown}\n                    onCreate={props.onCreate}\n                    onEdit={props.onEdit}\n                    onRemove={props.onRemove}\n                    onCopy={props.onCopy}\n                />\n            </Fragment>\n        </Fragment>\n    );\n}\n\ntype SaucepanHeaderProps = {\n    id: number,\n    header: string,\n    isInHeaderEditMode: boolean,\n    onHeaderEdit: Function,\n    onHeaderChanged: Function\n}\n\ntype SaucepanHeaderState = {\n    header: string\n}\n\nclass SaucepanHeader extends Component<SaucepanHeaderProps, SaucepanHeaderState> {\n    constructor(props: SaucepanHeaderProps) {\n        super(props);\n\n        this.state = {\n            header: this.props.header !== null ? this.props.header : i18n.t(\"saucepan_name_fallback\")\n        }\n    }\n\n    render() {\n        const renderEditButton = () => {\n            if (!this.props.isInHeaderEditMode) {\n                return  <button \n                            className=\"text-xs text-transparent hover:text-white\" \n                            onClick={() => this.props.onHeaderEdit(true) }>\n                            <IconPencil/>\n                        </button>\n            }\n        }\n\n        const renderInputOrMarkdown = () => {\n            if (!this.props.isInHeaderEditMode) {\n                return <span className=\"font-bold text-3xl text-white\" onClick={() => this.props.onHeaderEdit(true)}>{this.state.header}</span>\n            } else {\n                return <form className=\"inline-block\" onSubmit={e => this.props.onHeaderChanged(e)}>\n                            <input\n                                type=\"hidden\"\n                                id={input_header_id}\n                                name={input_header_name}\n                                value={this.props.id}/>\n                            <Input\n                                type=\"text\"\n                                id={input_header_name}\n                                name={input_header_name}\n                                value={this.state.header}\n                                onChange={e => this.onInputChanged(e)}/>\n                            <input\n                                className=\"hidden\"\n                                type=\"submit\"\n                                id=\"input_submit\"/>\n                        </form>\n            }\n        }\n\n        return (\n            <div className=\"p-1\">\n                <button className=\"mr-2 p-2 text-white md:hidden\"><IconMenu2/></button>\n                { renderInputOrMarkdown() }\n                { renderEditButton() }\n            </div>\n        );\n    }\n\n    onInputChanged = event => {\n        this.setState({ header: event.target.value });\n    }\n}\n\nexport { Saucepan };","/home/isaiahcollins/Projects/saucepan/src/components/components.js",[],"/home/isaiahcollins/Projects/saucepan/src/storage/storage.ts",["43","44"],"import { Sauce, Pan } from '../core/types';\nimport PouchDB from 'pouchdb';\n\nconst databaseName = \"saucepan-main\";\nconst database = new PouchDB(databaseName);\n\nexport { databaseName, database };",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":28,"nodeType":"51","messageId":"52","endLine":2,"endColumn":37},{"ruleId":"49","severity":1,"message":"53","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":15},{"ruleId":"49","severity":1,"message":"54","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":20},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'FormEvent' is defined but never used.","Identifier","unusedVar","'Sauce' is defined but never used.","'Pan' is defined but never used.","no-global-assign","no-unsafe-negation"]