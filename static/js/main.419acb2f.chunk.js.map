{"version":3,"sources":["toolbar/Toolbar.js","sauces/Sauces.js","app/Saucepan.js","i18n.js","index.js"],"names":["Toolbar","className","this","props","title","Component","style","getComputedStyle","document","body","color_on_primary","getPropertyValue","dimen_icon_size","Sauces","onInsert","event","preventDefault","inputSauceQuestion","value","inputSauceAnswer","sauce","id","Date","now","question","answer","setState","sauces","state","concat","inputSauceId","onRemove","current_sauces","index","findIndex","x","splice","onEdit","edit","remove","onSubmit","e","type","ref","a","placeholder","i18n","t","SauceList","onCopyToClipboard","navigator","clipboard","writeText","map","onClick","size","color","Saucepan","use","LanguageDetector","init","resources","en","translations","en_strings","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","ReactDOM","render","StrictMode","I18nextProvider","getElementById"],"mappings":"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","file":"static/js/main.419acb2f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Toolbar.css';\n\nclass Toolbar extends Component {\n    render() {\n        return (\n            <div className=\"toolbar\">\n                <div className=\"title\">{this.props.title}</div>\n            </div>\n        )\n    }\n}\n\nexport default Toolbar;\n","import { Component } from 'react';\nimport i18n from 'i18next';\nimport { Clipboard, Trash, Edit2 } from 'react-feather';\nimport ReactMarkdown from 'react-markdown';\nimport './Sauces.css';\n\nconst style = getComputedStyle(document.body);\nconst color_on_primary = style.getPropertyValue(\"--color-on-primary\");\nconst dimen_icon_size = style.getPropertyValue(\"--dimen-icon-size\");\n\nconst markdown_bold = \"**\"\nconst markdown_block = \"```\"\n\nconst input_sauce_id = \"_sauce-id\";\nconst input_sauce_question = \"_sauce-question\";\nconst input_sauce_answer = \"_sauce-answer\";\n\nclass Sauces extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { sauces: [] }\n    }\n\n    onInsert = (event) => {\n        event.preventDefault();\n\n        if (this.inputSauceQuestion.value === \"\" ||\n            this.inputSauceAnswer.value === \"\") {\n                return\n            }\n\n        var sauce = {\n            id: Date.now(),\n            question: this.inputSauceQuestion.value,\n            answer: this.inputSauceAnswer.value\n        }\n\n        this.setState({ sauces: this.state.sauces.concat(sauce) });\n        \n        this.inputSauceId.value = \"\"\n        this.inputSauceQuestion.value = \"\"\n        this.inputSauceAnswer.value = \"\"\n    }\n\n    onRemove = (sauce) => {\n        var current_sauces = this.state.sauces;\n        var index = current_sauces.findIndex(x => x.id === sauce.id);\n        if (index > -1) {\n            current_sauces = current_sauces.splice(index, 1);\n            this.setState({ sauces: current_sauces, });\n        }\n    }\n\n    onEdit = (sauce) => {}\n\n    render() {\n        return (\n            <div className=\"component-root\">\n                <div className=\"container\">\n                    <SauceList sauces={this.state.sauces} edit={this.onEdit} remove={this.onRemove}/>\n                </div>\n                <div className=\"container\">\n                    <form onSubmit={ e => this.onInsert(e) }>\n                        <input \n                            type=\"hidden\"\n                            id={input_sauce_id}\n                            ref={ (a) => this.inputSauceId = a }/>\n                        <br/>\n                        <input\n                            type=\"text\"\n                            id={input_sauce_question}\n                            placeholder={ i18n.t(\"input_question\") }\n                            ref={ (a) => this.inputSauceQuestion = a} />\n                        <br/>\n                        <input\n                            type=\"text\"\n                            id={input_sauce_answer}\n                            placeholder={ i18n.t(\"input_answer\") }\n                            ref={ (a) => this.inputSauceAnswer = a } />\n                        <br/>\n                        <button type=\"submit\">{ i18n.t(\"button_save\") }</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass SauceList extends Component {\n    onCopyToClipboard = (sauce) => {\n        navigator.clipboard.writeText(sauce.id);\n    }\n\n    render() {\n        return (\n            <ul className=\"sauce-list\">\n                { this.props.sauces.map( sauce => {\n                    return (\n                        <li key={sauce.id} className=\"sauce-container\">\n                            <div className=\"sauce-question\">\n                                <ReactMarkdown>{ markdown_bold.concat(sauce.question).concat(markdown_bold) }</ReactMarkdown>\n                            </div>\n                            <div className=\"sauce-answer\">\n                                <ReactMarkdown>{ markdown_block.concat(sauce.answer).concat(markdown_block) }</ReactMarkdown>\n                            </div>\n                            <button \n                                title={ i18n.t(\"button_copy\") } \n                                onClick={ e => this.onCopyToClipboard(sauce) }>\n                                    <Clipboard size={dimen_icon_size} color={color_on_primary}/>\n                            </button>\n                            <button \n                                title={ i18n.t(\"button_edit\") } \n                                onClick={ e => this.props.edit(sauce) }>\n                                    <Edit2 size={dimen_icon_size} color={color_on_primary}/>\n                            </button>\n                            <button \n                                title={ i18n.t(\"button_remove\") } \n                                onClick={ e => this.props.remove(sauce)}>\n                                    <Trash size={dimen_icon_size} color={color_on_primary}/>\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nexport default Sauces;","import { Component } from 'react';\nimport i18n from 'i18next';\nimport Toolbar from '../toolbar/Toolbar';\nimport Sauces from '../sauces/Sauces';\nimport './Saucepan.css';\n\nexport default class Saucepan extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Toolbar title={ i18n.t(\"app_name\") }/>\n\t\t\t\t<Sauces/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en_strings from './translations/en.json';\n\ni18n.use(LanguageDetector).init({\n    resources: {\n        en: {\n            translations: en_strings\n        }\n    },\n    fallbackLng: \"en\",\n    debug: true,\n\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n\n    keySeparator: false,\n\n    interpolation: {\n        escapeValue: false,\n        formatSeparator: \",\"\n    },\n\n    react: {\n        wait: true\n    }\n})\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport Saucepan from './app/Saucepan';\nimport i18n from './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<I18nextProvider i18n={i18n}>\n\t\t\t<Saucepan />\n\t\t</I18nextProvider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}