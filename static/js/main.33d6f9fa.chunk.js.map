{"version":3,"sources":["form/form.js","res.js","sauces/sauces.js","saucepan/saucepan.js","core/core.js","i18n.js","index.js"],"names":["insert_sauce_id","insert_sauce_question","insert_sauce_answer","update_sauce_id","update_sauce_question","update_sauce_answer","Creator","rootClassName","this","props","isShown","className","onClick","onDismiss","id","i18next","t","onSubmit","e","saucepanId","type","name","ref","a","inputSauceId","inputSauceQuestion","inputSauceAnswer","Component","Editor","onInputChanged","event","target","setState","value","question","answer","state","onChange","documentStyle","getComputedStyle","document","body","colorOnPrimary","getPropertyValue","dimenIconSize","List","onCreate","sauces","map","sauce","autoRender","onEdit","onRemove","onCopy","renderItem","Item","concat","output","renderQuestion","renderAnswer","title","i18n","size","color","input_header_name","Saucepan","data","header","isInHeaderEditMode","onHeaderEdit","onHeaderChanged","SaucepanHeader","input_id","input_name","_","renderEditButton","Core","onSaucepanAdded","saucepans","Date","now","onShowToastNotification","onSaucepanModified","saucepan","currentSaucepans","index","findIndex","pan","pans","onSaucepanSwitched","currentSaucepanId","onSaucepanHeaderEdit","status","onSaucepanHeaderChanged","preventDefault","find","onSauceInsert","_insert_question","_insert_answer","onExitCreateMode","onSauceRemove","stopPropagation","filter","it","onSauceEdit","isInEditMode","currentSauce","onSauceUpdate","sauceId","_update_question","_update_answer","sauceIndex","onExitEditMode","onSauceCopied","navigator","clipboard","writeText","then","message","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onEnterCreateMode","isInCreateMode","onEnterEditMode","_currentSaucepanId","console","log","isSauceRenderedInMarkdown","renderSaucepanHeader","saucepanItemClassName","onInsert","renderSaucepan","renderSauceForm","use","LanguageDetector","init","resources","en","translations","en_strings","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","ReactDOM","render","StrictMode","I18nextProvider","getElementById"],"mappings":"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","file":"static/js/main.33d6f9fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { HiX } from \"react-icons/hi\";\nimport i18next from \"i18next\";\n\nimport './form.css';\n\nconst insert_sauce_id = \"_insert_id\";\nconst insert_sauce_question = \"_insert_question\";\nconst insert_sauce_answer = \"_insert_answer\";\n\nconst update_sauce_id = \"_update_id\";\nconst update_sauce_question = \"_update_question\";\nconst update_sauce_answer = \"_update_answer\";\n\nclass Creator extends Component {\n    render() {\n        const rootClassName = this.props.isShown ? \"container container-show\" : \"container container-hide\";\n\n        return(\n            <div className={rootClassName}>\n                <div className=\"wrapper\">\n                    <div className=\"dismiss-button-container\">\n                        <button className=\"dismiss-button\" onClick={this.props.onDismiss}><HiX id=\"icon\"/></button>\n                    </div>\n                    <div className=\"header\">{i18next.t(\"header_create_sauce\")}</div>\n\n                    <form className=\"editor-form\" onSubmit={e => this.props.onSubmit(this.props.saucepanId, e)}>\n                        <input\n                            type=\"hidden\"\n                            id={insert_sauce_id}\n                            name={insert_sauce_id}\n                            ref={ (a) => this.inputSauceId = a }/>\n                        <br/>\n                        <label>{i18next.t(\"input_question\")}</label>\n                        <input\n                            type=\"text\"\n                            id={insert_sauce_question}\n                            name={insert_sauce_question}\n                            ref={ (a) => this.inputSauceQuestion = a}/>\n                        <br/>\n                        <label>{i18next.t(\"input_answer\")}</label>\n                        <input\n                            type=\"text\"\n                            id={insert_sauce_answer}\n                            name={insert_sauce_answer}\n                            ref={ (a) => this.inputSauceAnswer = a }/>\n                        <br/>\n                        <button type=\"submit\">{i18next.t(\"button_save\")}</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Editor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.id,\n            question: this.props.question,\n            answer: this.props.answer\n        }\n    }\n\n    render() {\n        const rootClassName = this.props.isShown ? \"container container-show\" : \"container container-hide\";\n\n        return (\n            <div className={rootClassName}>\n                <div className=\"wrapper\">\n                    <div className=\"dismiss-button-container\">\n                        <button className=\"dismiss-button\" onClick={this.props.onDismiss}><HiX id=\"icon\"/></button>\n                    </div>\n                    <div className=\"header\">{i18next.t(\"header_edit_sauce\")}</div>\n\n                    <form className=\"editor-form\"\n                          onSubmit={e => this.props.onSubmit(this.props.saucepanId, this.props.id, e)}>\n                        <input\n                            type=\"hidden\"\n                            id={update_sauce_id}\n                            name={update_sauce_id}\n                            value={this.state.id}\n                            ref={a => this.inputSauceId = a}\n                            onChange={e => this.onInputChanged(e)}/>\n                        <br/>\n                        <label>{i18next.t(\"input_question\")}</label>\n                        <input\n                            type=\"text\"\n                            id={update_sauce_question}\n                            name={update_sauce_question}\n                            value={this.state.question}\n                            ref={a => this.inputSauceQuestion = a}\n                            onChange={e => this.onInputChanged(e)}/>\n                        <br/>\n                        <label>{i18next.t(\"input_answer\")}</label>\n                        <input\n                            type=\"text\"\n                            id={update_sauce_answer}\n                            name={update_sauce_answer}\n                            value={this.state.answer}\n                            ref={a => this.inputSauceAnswer = a}\n                            onChange={e => this.onInputChanged(e)}/>\n                        <br/>\n                        <button type=\"submit\">{i18next.t(\"button_save\")}</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n\n    onInputChanged = event => {\n        switch(event.target.id) {\n            case update_sauce_id:\n                this.setState({ id: event.target.value });\n                break;\n            case update_sauce_question:\n                this.setState({ question: event.target.value });\n                break;\n            case update_sauce_answer:\n                this.setState({ answer: event.target.value });\n                break;\n            default: break;\n        }\n    }\n}\n\nexport { Creator, Editor };","const documentStyle = getComputedStyle(document.body);\n\nconst colorPrimary = documentStyle.getPropertyValue(\"--color-primary\");\nconst colorPrimaryVariant = documentStyle.getPropertyValue(\"--color-primary-variant\");\nconst colorOnPrimary = documentStyle.getPropertyValue(\"--color-on-primary\");\nconst colorSecondary = documentStyle.getPropertyValue(\"--color-secondary\");\nconst colorSecondaryVariant = documentStyle.getPropertyValue(\"--color-secondary-variant\");\n\nconst dimenIconSize = documentStyle.getPropertyValue(\"--dimen-icon-size\");\n\nexport { \n    colorPrimary, colorPrimaryVariant, colorOnPrimary,\n    colorSecondary, colorSecondaryVariant,\n    dimenIconSize\n}","import React, { Component } from 'react';\nimport i18n from 'i18next';\nimport { HiOutlinePencil, HiOutlineTrash, HiOutlinePlus } from 'react-icons/hi';\nimport ReactMarkdown from 'react-markdown';\n\nimport './sauces.css';\nimport { dimenIconSize, colorOnPrimary } from '../res';\n\nconst md_bold = \"**\"\nconst md_code = \"```\"\n\nclass List extends Component {\n    render() {\n        const renderItem = sauce => {\n            return <Item\n                        key={sauce.id}\n                        sauce={sauce}\n                        saucepanId={this.props.saucepanId}\n                        autoRender={this.props.autoRender}\n                        onEdit={this.props.onEdit}\n                        onRemove={this.props.onRemove}\n                        onCopy={this.props.onCopy}\n                    />\n        }\n\n        return (\n            <div className=\"sauce-list\">\n                <button className=\"add-action\" onClick={this.props.onCreate}>\n                    <div className=\"wrapper\">\n                        <HiOutlinePlus id=\"icon\"/>\n                    </div>\n                </button>\n                {this.props.sauces.map(sauce => renderItem(sauce))}\n            </div>\n        );\n    }\n}\n\nclass Item extends Component {\n    render() {\n        const sauce = this.props.sauce;\n\n        const renderQuestion = question => {\n            if (this.props.autoRender)\n                return <div className=\"sauce-question\">\n                    <ReactMarkdown>{question}</ReactMarkdown>\n                </div>\n            else return <div className=\"sauce-question\">{question}</div>\n        }\n        const renderAnswer = answer => {\n            if (this.props.autoRender)\n                return <div className=\"sauce-answer\">\n                    <ReactMarkdown>{answer}</ReactMarkdown>\n                </div>\n            else return <div className=\"sauce-answer\">{answer}</div>\n        }\n\n        const question = md_bold.concat(sauce.question).concat(md_bold);\n        const answer = md_code.concat(sauce.answer).concat(md_code);\n        const output = question.concat(\"  \").concat(answer);\n\n        return (\n            <div className=\"sauce-container\" onClick={() => this.props.onCopy(output)}>\n                <div>\n                    {renderQuestion(question)}\n                    {renderAnswer(answer)}\n                </div>\n                <div className=\"button-container\">\n                    <div className=\"button-wrapper\">\n                        <button\n                            title={ i18n.t(\"button_copy\") } \n                            onClick={ (e) => this.props.onEdit(sauce, e) }>\n                                <HiOutlinePencil size={dimenIconSize} color={colorOnPrimary}/>\n                        </button>\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <button\n                            title={ i18n.t(\"button_remove\") } \n                            onClick={ (e) => this.props.onRemove(this.props.saucepanId, sauce, e) }>\n                                <HiOutlineTrash size={dimenIconSize} color={colorOnPrimary}/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport { List, Item };","import i18next from 'i18next';\nimport React, { Component } from 'react';\nimport { HiOutlinePencil } from 'react-icons/hi';\nimport { List } from '../sauces/sauces';\n\nimport './saucepan.css';\n\nconst input_header_id = \"input_id\";\nconst input_header_name = \"input_name\";\n\nclass Saucepan extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"saucepan-root\">\n                <div className=\"wrapper\">\n                    <SaucepanHeader\n                        id={this.props.data.id}\n                        header={this.props.data.name}\n                        isInHeaderEditMode={this.props.isInHeaderEditMode}\n                        onHeaderEdit={this.props.onHeaderEdit}\n                        onHeaderChanged={this.props.onHeaderChanged}/>\n                    <div className=\"container-main\">\n                        <List\n                            saucepanId={this.props.data.id}\n                            sauces={this.props.data.sauces}\n                            autoRender={this.props.autoRender}\n                            onCreate={this.props.onCreate}\n                            onEdit={this.props.onEdit}\n                            onRemove={this.props.onRemove}\n                            onCopy={this.props.onCopy}\n                        />\n                    </div> \n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass SaucepanHeader extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            header: this.props.header !== null ? this.props.header : i18next.t(\"pan_name_fallback\")\n        }\n    }\n\n    render() {\n        const renderEditButton = _ => {\n            if (!this.props.isInHeaderEditMode) {\n                return  <button className=\"header-edit\" onClick={() => this.props.onHeaderEdit(true) }>\n                            <HiOutlinePencil/>\n                        </button>\n            }\n        }\n\n        const renderInputOrMarkdown = _ => {\n            if (!this.props.isInHeaderEditMode) {\n                return <span id=\"header\">{this.state.header}</span>\n            } else {\n                return <form onSubmit={e => this.props.onHeaderChanged(e)}>\n                            <input\n                                type=\"hidden\"\n                                id={input_header_id}\n                                name={input_header_name}\n                                value={this.props.id}\n                                ref={a => this.input_id = a}/>\n                            <input\n                                type=\"text\"\n                                id={input_header_name}\n                                name={input_header_name}\n                                value={this.state.header}\n                                ref={a => this.input_name = a }\n                                onChange={e => this.onInputChanged(e)}/>\n                            <input\n                                type=\"submit\"\n                                id=\"input_submit\"/>\n                        </form>\n            }\n        }\n\n        return(\n            <div className=\"header-container\">\n                <div className=\"header-wrapper\">{ renderInputOrMarkdown() }</div>\n                { renderEditButton() }\n            </div>\n        );\n    }\n\n    onInputChanged = event => {\n        this.setState({ header: event.target.value });\n    }\n}\n\nexport default Saucepan;","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Creator, Editor } from '../form/form';\nimport { HiOutlinePlus } from \"react-icons/all\";\nimport Saucepan from '../saucepan/saucepan';\nimport i18next from 'i18next';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './core.css';\n\n\nclass Core extends Component {\n    constructor(props) {\n        super(props);\n\n        const _currentSaucepanId = Date.now()\n        console.log(_currentSaucepanId);\n        this.state = { \n            saucepans: [ { id: _currentSaucepanId, name: null, sauces: [] } ],\n            currentSaucepanId: _currentSaucepanId,\n\n            isSauceRenderedInMarkdown: true,\n            isInCreateMode: false,\n            isInEditMode: false,\n            isInHeaderEditMode: false,\n            \n            currentSauce: null,\n        }\n    }\n\n    render() {\n        const renderSaucepanList = _ => {\n            return (<div>{\n                this.state.saucepans.map(saucepan => {\n                    let saucepanItemClassName = \"saucepan-item\";\n                    if (saucepan.id === this.state.currentSaucepanId) {\n                        saucepanItemClassName = saucepanItemClassName + \" active\";\n                    }\n\n                    return <button\n                        key={saucepan.id}\n                        className={saucepanItemClassName}\n                        onClick={() => this.onSaucepanSwitched(saucepan)}>\n                        {renderSaucepanHeader(saucepan)}\n                    </button>\n                })\n            }</div>)\n        }\n\n        const renderSaucepan = _ => {\n            const index = this.state.saucepans.findIndex(saucepan => saucepan.id === this.state.currentSaucepanId);\n\n            if (index > -1) {\n                const saucepan = this.state.saucepans[index];\n\n                return <Saucepan\n                            data={saucepan}\n                            autoRender={this.state.isSauceRenderedInMarkdown}\n                            isInHeaderEditMode={this.state.isInHeaderEditMode}\n                            onInsert={this.onSauceInsert}\n                            onRemove={this.onSauceRemove}\n                            onEdit={this.onSauceEdit}\n                            onCreate={this.onEnterCreateMode}\n                            onCopy={this.onSauceCopied}\n                            onHeaderEdit={this.onSaucepanHeaderEdit}\n                            onHeaderChanged={this.onSaucepanHeaderChanged}/>\n            }\n        }\n\n        const renderSaucepanHeader = saucepan => {\n            if (saucepan.name !== null)\n                return <span>{saucepan.name}</span>\n            else return <span>{i18next.t(\"pan_name_fallback\")}</span>\n        }\n\n        const renderSauceForm = _ => {\n            if (this.state.currentSauce !== null && this.state.isInEditMode) {\n                const sauce = this.state.currentSauce;\n\n                return <Editor\n                            id={sauce.id}\n                            question={sauce.question}\n                            answer={sauce.answer}\n                            saucepanId={this.state.currentSaucepanId}\n                            isShown={this.state.isInEditMode}\n                            onSubmit={this.onSauceUpdate}\n                            onDismiss={this.onExitEditMode}/>\n            } else if (this.state.isInCreateMode) {\n                return <Creator\n                            saucepanId={this.state.currentSaucepanId}\n                            isShown={this.state.isInCreateMode}\n                            onSubmit={this.onSauceInsert}\n                            onDismiss={this.onExitCreateMode}/>\n            }\n        }\n\n        return (\n            <div className=\"core-root\">\n                <div className=\"wrapper\">\n                    <div className=\"container\">\n                        <div className=\"navigation-container\">\n                            <div className=\"header\">{i18next.t(\"app_name\")}</div>\n                            <button className=\"saucepan-add\" onClick={this.onSaucepanAdded}>\n                                <HiOutlinePlus/>\n                            </button>\n                            {renderSaucepanList()}\n                        </div>\n                    </div>\n                    <div className=\"container\">{renderSaucepan()}</div>\n                    {renderSauceForm()}\n                </div>\n                <ToastContainer />\n            </div>\n        );\n    }\n\n    onSaucepanAdded = () => {\n        this.setState({\n            saucepans: this.state.saucepans.concat({\n                id: Date.now(),\n                name: null,\n                sauces: []\n            }),\n        })\n        this.onShowToastNotification(\"feedback_saucepan_added\");\n    }\n    \n    onSaucepanModified = saucepan => {\n        let currentSaucepans = this.state.saucepans;\n        let index = currentSaucepans.findIndex(pan => saucepan.id === pan.id);\n        if (index > - 1) {\n            currentSaucepans[index] = saucepan;\n\n            this.setState({\n                pans: currentSaucepans,\n            });\n        }\n    }\n\n    onSaucepanSwitched = saucepan => {\n        this.setState({ currentSaucepanId: saucepan.id });\n    }\n\n    onSaucepanHeaderEdit = status => {\n        this.setState({ isInHeaderEditMode: status });\n    }\n\n    onSaucepanHeaderChanged = event => {\n        event.preventDefault();\n\n        const id = event.target[0].value;\n        const name = event.target[1].value;\n\n        if (id !== \"\" && name !== \"\") {\n            var saucepan = this.state.saucepans.find(saucepan => saucepan.id == id);\n\n            if (saucepan) {\n                saucepan.name = name;\n\n                this.onSaucepanHeaderEdit(false);\n                this.onSaucepanModified(saucepan);\n            }\n        }\n    }\n\n    onSauceInsert = (saucepanId, event) => {\n        event.preventDefault();\n\n        if (event.target._insert_question.value === \"\" ||\n            event.target._insert_answer.value === \"\") {\n                return\n            }\n\n        const sauce = {\n            id: Date.now(),\n            question: event.target._insert_question.value,\n            answer: event.target._insert_answer.value\n        };\n\n        const index = this.state.saucepans.findIndex(saucepan => saucepanId === saucepan.id);\n        if (index > -1) {\n            const saucepan = this.state.saucepans[index];\n            saucepan.sauces = saucepan.sauces.concat(sauce);\n            this.onSaucepanModified(saucepan);\n\n            this.onShowToastNotification(\"feedback_sauce_added\");\n            this.onExitCreateMode();\n        }\n    }\n\n    onSauceRemove = (saucepanId, sauce, event) => {\n        event.stopPropagation();\n\n        const index = this.state.pans.findIndex(saucepan => saucepan.id === saucepanId);\n\n        if (index > -1) {\n            const pan = this.state.pans[index];\n            pan.sauces = pan.sauces.filter(function(it) {\n                return it.id !== sauce.id;\n            });\n\n            this.onShowToastNotification(\"feedback_sauce_removed\");\n            this.onSaucepanModified(pan);\n        }\n    }\n\n    onSauceEdit = (sauce, event) => {\n        event.stopPropagation();\n\n        this.setState({\n            isInEditMode: true,\n            currentSauce: sauce,\n        });\n    }\n\n    onSauceUpdate = (saucepanId, sauceId, event) => {\n        event.preventDefault();\n\n        if (event.target._update_question.value === \"\" ||\n            event.target._update_answer.value === \"\") {\n            return\n        }\n\n        const index = this.state.saucepans.findIndex(saucepan => saucepanId === saucepan.id);\n        if (index > -1) {\n            const saucepan = this.state.saucepans[index];\n\n            const sauceIndex = saucepan.sauces.findIndex(sauce => sauce.id === sauceId);\n            if (sauceIndex > -1) {\n                const sauce = saucepan.sauces[sauceIndex];\n                sauce.question = event.target._update_question.value;\n                sauce.answer = event.target._update_answer.value;\n\n                saucepan.sauces[sauceIndex] = sauce;\n                this.onSaucepanModified(saucepan);\n\n                this.onShowToastNotification(\"feedback_sauce_updated\");\n                this.onExitEditMode();\n            }\n        }\n    }\n\n    onSauceCopied = output => {\n        navigator.clipboard.writeText(output)\n            .then(() => {\n                this.onShowToastNotification(\"feedback_sauce_copied\");\n            });\n    }\n\n    onShowToastNotification = (message) => {\n        toast.dark(i18next.t(message), {\n            position: \"bottom-right\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        })\n    }\n\n    onEnterCreateMode = _ => { this.setState({ isInCreateMode: true, currentSauce: null, isInEditMode: false }); }\n    onExitCreateMode = _ => { this.setState({ isInCreateMode: false, currentSauce: null }); }\n\n    onEnterEditMode = _ => { this.setState({ isInEditMode: true }); }\n    onExitEditMode = _ => { this.setState({ isInEditMode: false, currentSauce: null, isInCreateMode: false }); }\n}\n\nexport { Core }","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en_strings from './translations/en.json';\n\ni18n.use(LanguageDetector).init({\n    resources: {\n        en: {\n            translations: en_strings\n        }\n    },\n    fallbackLng: \"en\",\n    debug: true,\n\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n\n    keySeparator: false,\n\n    interpolation: {\n        escapeValue: false,\n        formatSeparator: \",\"\n    },\n\n    react: {\n        wait: true\n    }\n})\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport { Core } from './core/core';\nimport i18n from './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<I18nextProvider i18n={i18n}>\n\t\t\t<Core />\n\t\t</I18nextProvider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}