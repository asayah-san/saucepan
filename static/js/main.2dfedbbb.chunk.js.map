{"version":3,"sources":["toolbar/Toolbar.js","sauces/Sauces.js","app/Saucepan.js","index.js"],"names":["Toolbar","className","this","props","title","Component","style","getComputedStyle","document","body","color_on_primary","getPropertyValue","dimen_icon_size","Sauces","insert","event","inputSauceQuestion","value","inputSauceAnswer","sauce","id","Date","now","question","answer","setState","sauces","state","concat","preventDefault","alert","remove","current_sauces","index","findIndex","x","splice","edit","onSubmit","e","type","ref","a","inputSauceId","rows","cols","size","color","SauceList","copy","navigator","clipboard","writeText","map","onClick","Saucepan","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2dfedbbb.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Toolbar.css';\n\nclass Toolbar extends Component {\n    render() {\n        return (\n            <div className=\"toolbar\">\n                <div className=\"title\">{this.props.title}</div>\n            </div>\n        )\n    }\n}\n\nexport default Toolbar;\n","import { Component } from 'react';\nimport { Clipboard, Trash, Edit2, Save } from 'react-feather';\nimport ReactMarkdown from 'react-markdown';\nimport './Sauces.css';\n\nconst style = getComputedStyle(document.body);\nconst color_on_primary = style.getPropertyValue(\"--color-on-primary\");\nconst dimen_icon_size = style.getPropertyValue(\"--dimen-icon-size\");\n\nconst markdown_bold = \"**\"\nconst markdown_block = \"```\"\n\nconst input_sauce_id = \"_sauce-id\";\nconst input_sauce_question = \"_sauce-question\";\nconst input_sauce_answer = \"_sauce-answer\";\n\nclass Sauces extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { sauces: [] }\n    }\n\n    insert = (event) => {\n        if (this.inputSauceQuestion.value === \"\" ||\n            this.inputSauceAnswer.value === \"\") {\n                alert(\"question or answer field is empty\");\n                return\n            }\n\n        var sauce = {\n            id: Date.now(),\n            question: this.inputSauceQuestion.value,\n            answer: this.inputSauceAnswer.value\n        }\n\n        this.setState({ sauces: this.state.sauces.concat(sauce) });\n        \n        event.preventDefault();\n    }\n\n    remove = (sauce) => {\n        var current_sauces = this.state.sauces;\n        var index = current_sauces.findIndex(x => x.id === sauce.id);\n        if (index > -1) {\n            current_sauces = current_sauces.splice(index, 1);\n            this.setState({ sauces: current_sauces, });\n        }\n    }\n\n    edit = (sauce) => {}\n\n    render() {\n        return (\n            <div className=\"component-root\">\n                <div className=\"container\">\n                    <SauceList sauces={this.state.sauces} edit={this.edit} remove={this.remove}/>\n                </div>\n                <div className=\"container\">\n                    <form onSubmit={ e => this.insert(e) }>\n                        <input \n                            type=\"hidden\"\n                            id={input_sauce_id}\n                            ref={ (a) => this.inputSauceId = a }/>\n                        <br/>\n                        <textarea\n                            id={input_sauce_question}\n                            rows={8}\n                            cols={4}\n                            ref={ (a) => this.inputSauceQuestion = a} />\n                        <br/>\n                        <input\n                            type=\"text\"\n                            id={input_sauce_answer}\n                            ref={ (a) => this.inputSauceAnswer = a } />\n                        <br/>\n                        <button type=\"submit\"><Save size={dimen_icon_size} color={color_on_primary}/>Save</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass SauceList extends Component {\n\n    copy = (sauce) => {\n        navigator.clipboard.writeText(sauce.id);\n    }\n\n    render() {\n        return (\n            <ul className=\"sauce-list\">\n                { this.props.sauces.map( sauce => {\n                    return (\n                        <li key={sauce.id} className=\"sauce-container\">\n                            <button onClick={ e => this.copy(sauce) }><Clipboard size={dimen_icon_size} color={color_on_primary}/></button>\n                            <button onClick={ e => this.props.edit(sauce) }><Edit2 size={dimen_icon_size} color={color_on_primary}/></button>\n                            <button onClick={ e => this.props.remove(sauce)}><Trash size={dimen_icon_size} color={color_on_primary}/></button>\n                            <div className=\"sauce-question\">\n                                <ReactMarkdown>{ markdown_bold.concat(sauce.question).concat(markdown_bold) }</ReactMarkdown>\n                            </div>\n                            <div className=\"sauce-answer\">\n                                <ReactMarkdown>{ markdown_block.concat(sauce.answer).concat(markdown_block) }</ReactMarkdown>\n                            </div>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nexport default Sauces;","import { Component } from 'react';\nimport Toolbar from '../toolbar/Toolbar';\nimport Sauces from '../sauces/Sauces';\nimport './Saucepan.css';\n\nexport default class Saucepan extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Toolbar title={\"Saucepan\"}/>\n\t\t\t\t<Sauces/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Saucepan from './app/Saucepan';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Saucepan />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}