{"version":3,"sources":["res.js","sauces/sauces.js","editor/editor.js","core/core.js","i18n.js","index.js"],"names":["documentStyle","getComputedStyle","document","body","colorOnPrimary","getPropertyValue","dimenIconSize","SauceList","onCopyToClipboard","code","navigator","clipboard","writeText","className","this","props","sauces","map","sauce","autoRender","edit","onEdit","remove","onRemove","copy","id","Component","SauceItem","question","concat","answer","output","renderToMarkdown","title","i18n","t","onClick","size","color","Editor","editorStatus","isShown","onSubmit","e","onInsert","type","name","ref","a","inputSauceId","placeholder","inputSauceQuestion","inputSauceAnswer","Saucepan","event","preventDefault","target","value","Date","now","setState","state","isEditorShown","filter","it","onEditorVisibilityStatusChange","dismissHandler","status","isAutoRender","use","LanguageDetector","init","resources","en","translations","en_strings","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","ReactDOM","render","StrictMode","I18nextProvider","getElementById"],"mappings":"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","file":"static/js/main.bccd8552.chunk.js","sourcesContent":["const documentStyle = getComputedStyle(document.body);\n\nconst colorPrimary = documentStyle.getPropertyValue(\"--color-primary\");\nconst colorPrimaryVariant = documentStyle.getPropertyValue(\"--color-primary-variant\");\nconst colorOnPrimary = documentStyle.getPropertyValue(\"--color-on-primary\");\nconst colorSecondary = documentStyle.getPropertyValue(\"--color-secondary\");\nconst colorSecondaryVariant = documentStyle.getPropertyValue(\"--color-secondary-variant\");\n\nconst dimenIconSize = documentStyle.getPropertyValue(\"--dimen-icon-size\");\n\nexport { \n    colorPrimary, colorPrimaryVariant, colorOnPrimary,\n    colorSecondary, colorSecondaryVariant,\n    dimenIconSize\n}","import { Component } from 'react';\nimport i18n from 'i18next';\nimport { HiOutlineDuplicate, HiOutlineTrash, HiOutlinePencil } from 'react-icons/hi';\nimport ReactMarkdown from 'react-markdown';\n\nimport './sauces.css';\nimport { colorOnPrimary, dimenIconSize } from '../res';\n\nconst md_bold = \"**\"\nconst md_code = \"```\"\n\nclass SauceList extends Component {\n    render() {\n        return (\n            <div className=\"sauce-list\">\n                { this.props.sauces.map( sauce => {\n                    return <SauceItem \n                                key={ sauce.id }\n                                sauce={ sauce }\n                                autoRender={ this.props.autoRender }\n                                edit={ this.props.onEdit }\n                                remove={ this.props.onRemove }\n                                copy={ this.onCopyToClipboard }\n                            />\n                })}\n            </div>\n        );\n    }\n        \n    onCopyToClipboard = (code) => {\n        navigator.clipboard.writeText(code);\n    }\n}\n\nclass SauceItem extends Component {\n    render() {\n        const sauce = this.props.sauce;\n        \n        const renderToMarkdown = (question, answer) => {\n            if (this.props.autoRender) {\n                return <div>\n                            <div className=\"sauce-question\">\n                                <ReactMarkdown>{ question }</ReactMarkdown>\n                            </div>\n                            <div className=\"sauce-answer\">\n                                <ReactMarkdown>{ answer }</ReactMarkdown>\n                            </div>\n                        </div>\n            } else {\n                return  <div>\n                            <div className=\"sauce-question\">{question}</div>\n                            <div className=\"sauce-answer\">{answer}</div>\n                        </div>\n            }\n        }\n\n        const question = md_bold.concat(sauce.question).concat(md_bold);\n        const answer = md_code.concat(sauce.answer).concat(md_code);\n        const output = question.concat(\"  \").concat(answer);\n\n        return (\n            <div key={sauce.id} className=\"sauce-container\">\n                <div>\n                    { renderToMarkdown(question, answer) }\n                </div>\n                <div className=\"button-container\">\n                    <button \n                        title={ i18n.t(\"button_copy\") } \n                        onClick={ () => this.props.copy(output) }>\n                            <HiOutlineDuplicate size={dimenIconSize} color={colorOnPrimary}/>\n                    </button>\n                    <button \n                        title={ i18n.t(\"button_edit\") } \n                        onClick={ () => this.props.edit(sauce) }>\n                            <HiOutlinePencil size={dimenIconSize} color={colorOnPrimary}/>\n                    </button>\n                    <button \n                        title={ i18n.t(\"button_remove\") } \n                        onClick={ () => this.props.remove(sauce)}>\n                            <HiOutlineTrash size={dimenIconSize} color={colorOnPrimary}/>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport { SauceList, SauceItem };","import { Component } from 'react';\nimport i18n from 'i18next';\n\nimport './editor.css';\n\nconst input_sauce_id = \"_sauce_id\";\nconst input_sauce_question = \"_sauce_question\";\nconst input_sauce_answer = \"_sauce_answer\";\n\nclass Editor extends Component {\n    render() {\n        const editorStatus = this.props.isShown ? \"editor-root editor-show\" : \"editor-root editor-hide\"\n\n        return (\n            <div className={editorStatus}>\n                <div className=\"editor\">\n                    <form className=\"editor-form\" onSubmit={ e => this.props.onInsert(e) }>\n                        <input \n                            type=\"hidden\"\n                            id={input_sauce_id}\n                            name=\"inputSauceId\"\n                            ref={ (a) => this.inputSauceId = a }/>\n                        <br/>\n                        <input\n                            type=\"text\"\n                            id={input_sauce_question}\n                            name=\"inputSauceQuestion\"\n                            placeholder={ i18n.t(\"input_question\") }\n                            ref={ (a) => this.inputSauceQuestion = a} />\n                        <br/>\n                        <input\n                            type=\"text\"\n                            id={input_sauce_answer}\n                            name=\"inputSauceAnswer\"\n                            placeholder={ i18n.t(\"input_answer\") }\n                            ref={ (a) => this.inputSauceAnswer = a } />\n                        <br/>\n                        <button type=\"submit\">{ i18n.t(\"button_save\") }</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Editor;","import { Component } from 'react';\nimport i18n from 'i18next';\nimport { SauceList } from '../sauces/sauces';\nimport Editor from '../editor/editor';\nimport { HiOutlinePlus } from 'react-icons/hi';\n\nimport './core.css';\nimport { colorOnPrimary } from '../res';\n\nclass Saucepan extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = { \n\t\t\tsauces: [],\n\t\t\tautoRender: true,\n\t\t\tisEditorShown: false,\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"saucepan-root\">\n                <div className=\"root-wrapper\">\n                    <div className=\"container\">\n                        <div className=\"button-wrapper\">\n                            <button \n                                className=\"action-button\"\n                                onClick={() => this.onEditorVisibilityStatusChange(true) }>\n                                <HiOutlinePlus color={colorOnPrimary}/>\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"header\">{ i18n.t(\"app_name\") }</div>\n                        <SauceList\n                            sauces={this.state.sauces}\n                            autoRender={this.state.autoRender}\n                        />\n                    </div>\n                </div>\n                <Editor \n                    isShown={this.state.isEditorShown}\n                    onInsert={this.onInsert}\n                    onRemove={this.onRemove}\n                    onEdit={this.onEdit}\n                    dismissHandler={() => this.onEditorVisibilityStatusChange(false) }\n                />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonInsert = (event) => {\n        event.preventDefault();\n\n        if (event.target.inputSauceQuestion.value === \"\" ||\n            event.target.inputSauceAnswer.value === \"\") {\n                return\n            }\n\n        var sauce = {\n            id: Date.now(),\n            question: event.target.inputSauceQuestion.value,\n            answer: event.target.inputSauceAnswer.value\n        }\n\n        this.setState({ \n            sauces: this.state.sauces.concat(sauce),\n            isEditorShown: false,\n        });\n    }\n\n    onRemove = (sauce) => {\n        this.setState({ \n            sauces: this.state.sauces.filter(function(it) {\n                return it.id !== sauce.id;\n            }) \n        });\n    }\n\n    onEdit = (sauce) => {}\n\n    onEditorVisibilityStatusChange(status) {\n        this.setState({\n            isEditorShown: status,\n        })\n    }\n\n    onAutoRenderStatusChange(isAutoRender)  {\n        this.setState({\n            autoRender: isAutoRender,\n        })\n    }\n}\n\nexport default Saucepan;","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en_strings from './translations/en.json';\n\ni18n.use(LanguageDetector).init({\n    resources: {\n        en: {\n            translations: en_strings\n        }\n    },\n    fallbackLng: \"en\",\n    debug: true,\n\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n\n    keySeparator: false,\n\n    interpolation: {\n        escapeValue: false,\n        formatSeparator: \",\"\n    },\n\n    react: {\n        wait: true\n    }\n})\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport Saucepan from './core/core';\nimport i18n from './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<I18nextProvider i18n={i18n}>\n\t\t\t<Saucepan />\n\t\t</I18nextProvider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}